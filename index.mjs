// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@v0.1.0-esm/index.mjs";import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{factory as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.1.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.1.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-unity-probability-array@v0.1.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import{isPrimitive as d}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";function u(e,t,r){var s,i,n,o;for(n=e.length,i=new Array(t),o=0;o<t;o++)s=a(n*r()),i[o]=e[s];return i}function f(e,t,r,s){var i,n,o,a,l,p,m,d;for(a=e.length,i=new Array(a),l=0;l<a;l++)i[l]=s[l];for(o=new Array(t),l=0;l<t;l++){for(d=r(),n=0,p=0;p<a&&!(d<(n+=i[p]));p++);for(m=0;m<a;m++)m!==p&&(i[m]/=1-i[p]);i[p]=0,o[l]=e[p]}return o}var v=Array.prototype.slice;function c(e,t,r){var s,i,n;for(i=e.length-1;i>0;i--)n=a(r()*(i+1)),s=e[i],e[i]=e[n],e[n]=s;return v.call(e,0,t)}function g(e,t,r,s){var i,n,o,l,p,m,d,h,u,f;for(o=s.slice(),m=e.length,i=[],n=[],u=0;u<m;u++)o[u]*=m,o[u]<1?i.push(u):n.push(u);for(l=new Array(m),d=new Array(m);0!==i.length&&0!==n.length;)f=i.shift(),h=n.shift(),d[f]=o[f],l[f]=h,o[h]=o[h]+o[f]-1,o[h]<1?i.push(h):n.push(h);for(u=0;u<n.length;u++)d[n[u]]=1;for(u=0;u<i.length;u++)d[i[u]]=1;for(p=new Array(t),u=0;u<t;u++)f=a(m*r()),r()<d[f]?p[u]=e[f]:p[u]=e[l[f]];return p}var b={mutate:!1,replace:!0};function j(e,t){return h(t)?m(t,"size")&&(e.size=t.size,!l(e.size))?new TypeError(i("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","size",e.size)):m(t,"probs")&&(e.probs=t.probs,!p(e.probs))?new TypeError(i("invalid option. `%s` option must be an array of probabilities that sum to one. Option: `%s`.","probs",e.probs)):m(t,"mutate")&&(e.mutate=t.mutate,!d(e.mutate))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","mutate",e.mutate)):m(t,"replace")&&(e.replace=t.replace,!d(e.replace))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","replace",e.replace)):null:new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",t))}var y=Array.prototype.slice;function w(){var a,l,p,m,d,h;if(p=o(b),1===arguments.length)t(arguments[0])||r(arguments[0])?l=arguments[0]:d=j(p,a=arguments[0]);else if(arguments.length>1){if(a=arguments[1],!t(l=arguments[0])&&!r(l))throw new TypeError(i("invalid argument. `%s` argument must be array-like. Value: `%s`.","pool",l));d=j(p,a)}if(d)throw d;return m=a&&a.seed?n({seed:a.seed}):n(),void 0===l?h=v:(l=s(l)?l.split(""):o(l),h=w),e(h,"seed",m.seed),e(h,"PRNG",m),m=m.normalized,h;function v(e,n){var o,a,l,d,h;if(!t(e)&&!r(e))throw new TypeError(i("invalid argument. First argument must be array-like. Value: `%s`.",e));if(s(e)&&(e=e.split("")),l={},arguments.length>1&&(h=j(l,n)))throw h;if(o=void 0===l.replace?p.replace:l.replace,void 0!==l.probs&&(a=l.probs),d=l.size?l.size:p.size?p.size:e.length,!1===o&&d>e.length)throw new RangeError(i("invalid option. `size` option must be less than or equal to the length of `x` when `replace` is `false`. Option: `%s`.",d));return a?o?g(e,d,m,a):f(e,d,m,a):o?u(e,d,m):c(y.call(e),d,m)}function w(e){var t,r,s,n,o,a;if(0===l.length)return null;if(s={},arguments.length&&(o=j(s,e)))throw o;if(r=void 0===s.mutate?p.mutate:s.mutate,t=void 0===s.replace?p.replace:s.replace,n=s.size?s.size:p.size?p.size:l.length,!1===t&&n>l.length)throw new RangeError(i("invalid option. `size` option must be less than or equal to the population size when `replace` is `false`. Option: `%s`.",n));return t?u(l,n,m):(a=c(l,n,m),r&&(l=l.slice(n,l.length)),a)}}var z=w();e(z,"factory",w);export{z as default,w as factory};
//# sourceMappingURL=index.mjs.map
