// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-typed-array-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-copy@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-unity-probability-array@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";var u=a;var f=function(e,t,r){var s,i,n,o;for(n=e.length,i=new Array(t),o=0;o<t;o++)s=u(n*r()),i[o]=e[s];return i};var c=function(e,t,r,s){var i,n,o,a,l,p,m,d;for(a=e.length,i=new Array(a),l=0;l<a;l++)i[l]=s[l];for(o=new Array(t),l=0;l<t;l++){for(d=r(),n=0,p=0;p<a&&!(d<(n+=i[p]));p++);for(m=0;m<a;m++)m!==p&&(i[m]/=1-i[p]);i[p]=0,o[l]=e[p]}return o},g=a,v=Array.prototype.slice;var b=function(e,t,r){var s,i,n;for(i=e.length-1;i>0;i--)n=g(r()*(i+1)),s=e[i],e[i]=e[n],e[n]=s;return v.call(e,0,t)},j=a;var y=function(e,t,r,s){var i,n,o,a,l,p,m,d,h,u;for(o=s.slice(),p=e.length,i=[],n=[],h=0;h<p;h++)o[h]*=p,o[h]<1?i.push(h):n.push(h);for(a=new Array(p),m=new Array(p);0!==i.length&&0!==n.length;)u=i.shift(),d=n.shift(),m[u]=o[u],a[u]=d,o[d]=o[d]+o[u]-1,o[d]<1?i.push(d):n.push(d);for(h=0;h<n.length;h++)m[n[h]]=1;for(h=0;h<i.length;h++)m[i[h]]=1;for(l=new Array(t),h=0;h<t;h++)u=j(p*r()),r()<m[u]?l[h]=e[u]:l[h]=e[a[u]];return l},w={mutate:!1,replace:!0},z=l,x=p,E=m,A=d.isPrimitive,O=h,T=i;var k=function(e,t){return O(t)?E(t,"size")&&(e.size=t.size,!z(e.size))?new TypeError(T("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","size",e.size)):E(t,"probs")&&(e.probs=t.probs,!x(e.probs))?new TypeError(T("invalid option. `%s` option must be an array of probabilities that sum to one. Option: `%s`.","probs",e.probs)):E(t,"mutate")&&(e.mutate=t.mutate,!A(e.mutate))?new TypeError(T("invalid option. `%s` option must be a boolean. Option: `%s`.","mutate",e.mutate)):E(t,"replace")&&(e.replace=t.replace,!A(e.replace))?new TypeError(T("invalid option. `%s` option must be a boolean. Option: `%s`.","replace",e.replace)):null:new TypeError(T("invalid argument. Options argument must be an object. Value: `%s`.",t))},P=e,R=t,V=r,q=s.isPrimitive,F=i,G=n.factory,N=o,B=f,C=c,D=b,H=y,I=w,J=k,K=Array.prototype.slice;var L=function(){var e,t,r,s,i,n;if(r=N(I),1===arguments.length)R(arguments[0])||V(arguments[0])?t=arguments[0]:i=J(r,e=arguments[0]);else if(arguments.length>1){if(e=arguments[1],!R(t=arguments[0])&&!V(t))throw new TypeError(F("invalid argument. `pool` argument must be array-like. Value: `%s`.",t));i=J(r,e)}if(i)throw i;return s=e&&e.seed?G({seed:e.seed}):G(),void 0===t?n=o:(t=q(t)?t.split(""):N(t),n=a),P(n,"seed",s.seed),P(n,"PRNG",s),s=s.normalized,n;function o(e,t){var i,n,o,a,l,p;if(!R(e)&&!V(e))throw new TypeError(F("invalid argument. First argument must be array-like. Value: `%s`.",e));if(q(e)&&(e=e.split("")),a={},arguments.length>1&&(p=J(a,t)))throw p;if(i=void 0===a.replace?r.replace:a.replace,void 0!==a.probs&&(o=a.probs),l=a.size?a.size:r.size?r.size:e.length,!1===i&&l>e.length)throw new RangeError(F("invalid input option. `size` option must be less than or equal to the length of `x` when `replace` is `false`. Option: `%s`.",l));return o?i?H(e,l,s,o):C(e,l,s,o):i?B(e,l,s):(n=K.call(e),D(n,l,s))}function a(e){var i,n,o,a,l,p;if(0===t.length)return null;if(o={},arguments.length&&(l=J(o,e)))throw l;if(n=void 0===o.mutate?r.mutate:o.mutate,i=void 0===o.replace?r.replace:o.replace,a=o.size?o.size:r.size?r.size:t.length,!1===i&&a>t.length)throw new RangeError(F("invalid input option. `size` option must be less than or equal to the population size when `replace` is `false`. Option: `%s`.",a));return i?B(t,a,s):(p=D(t,a,s),n&&(t=t.slice(a,t.length)),p)}},M=L(),Q=L;e(M,"factory",Q);var S=M;export{S as default,Q as factory};
//# sourceMappingURL=index.mjs.map
